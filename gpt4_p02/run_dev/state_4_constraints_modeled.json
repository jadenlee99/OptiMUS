{
    "description": "A breakfast joint makes two different sandwiches: a regular and a special. Both need eggs and bacon. Each regular sandwich requires 2 eggs and 3 slices of bacon. Each special sandwich requires 3 eggs and 5 slices of bacon. The joint has a total of 40 eggs and 70 slices of bacon. It makes a profit of $3 per regular sandwich and a profit of $4 per special sandwich. How many of each sandwich should be made to maximize profit?",
    "parameters": {
        "NumSandwichTypes": {
            "type": "int",
            "shape": [],
            "definition": "NumSandwichTypes parameter"
        },
        "NumIngredients": {
            "type": "int",
            "shape": [],
            "definition": "NumIngredients parameter"
        },
        "Required": {
            "type": "float",
            "shape": [
                2,
                2
            ],
            "definition": "Required parameter"
        },
        "TotalAvailable": {
            "type": "float",
            "shape": [
                2
            ],
            "definition": "TotalAvailable parameter"
        },
        "ProfitPerSandwich": {
            "type": "float",
            "shape": [
                2
            ],
            "definition": "ProfitPerSandwich parameter"
        }
    },
    "objective": {
        "description": "\"The goal is to maximize the total profit from selling regular and special sandwiches\"",
        "formulation": null,
        "code": null
    },
    "constraints": [
        {
            "description": "The total number of eggs used for all sandwiches should not exceed 40",
            "formulation": "$2x_{\\text{regular}} + 3x_{\\text{special}} \\leq 40$",
            "code": null
        },
        {
            "description": "The total number of slices of bacon used for all sandwiches should not exceed 70",
            "formulation": "$3 xRegular + 5 xSpecial \\leq 70$",
            "code": null
        },
        {
            "description": "The number of regular sandwiches and special sandwiches made should be non-negative",
            "formulation": "$x_{\\text{Regular}} \\geq 0 \\quad \\text{and} \\quad x_{\\text{Special}} \\geq 0$",
            "code": null
        }
    ],
    "variables": {
        "xRegular": {
            "shape": [],
            "type": "integer",
            "definition": "Number of regular sandwiches made"
        },
        "xSpecial": {
            "shape": [],
            "type": "integer",
            "definition": "Number of special sandwiches made"
        }
    }
}